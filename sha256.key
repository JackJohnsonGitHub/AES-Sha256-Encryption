import os
import sys
import hashlib



def generate_private_key(password):
	#generates a random byte string for the private key.
	private_key_bytes = password #Bytes represent how long the generated key is

	#Hash the byte string to ensure it meets certain requirements
	private_key_hash = hashlib.sha256(private_key_bytes).digest()
	#Hashlib.sha256 creates a hash object that gets an input from private key bytes. 
	#The .digest gets the hash value of the imported data
	#this line ensures that we get a sha 256 hash from the private key bytes.
	return private_key_hash


def save_private_key(private_key, filename):
	#Writes the private key bytes to a file
	with open(filename, 'wb') as f:
		f.write(private_key)



if __name__ == "__main__":
	if len(sys.argv) != 2:
		print("Usage: python3 sha256.py your-password")
		sys.exit(1)
	password = sys.argv[1].encode('utf-8')
	private_key = generate_private_key(password)
	print(password)
	save_private_key(private_key, 'private_key.bin')